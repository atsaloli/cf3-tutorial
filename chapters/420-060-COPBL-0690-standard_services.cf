bundle agent main {

  methods:

    any::

      "Manage www service"

        usebundle => standard_services ("www", "stop");

}

bundle agent standard_services(service,state)
{

      # DATA

  vars:

    any::

      "stakeholders[www]" slist => { "www_in", "wwws_in", "www_alt_in" };


    SuSE|suse|debian::

      "startcommand[www]" string => "/etc/init.d/apache2 start";
      "stopcommand[www]"  string => "/etc/init.d/apache2 stop";
      "pattern[www]"      string => ".*apache2.*";


    redhat::

      "startcommand[www]" string => "/etc/init.d/httpd start";
      "stopcommand[www]"  string => "/etc/init.d/httpd stop";
      "pattern[www]"      string => ".*httpd.*";


      # Implementation details (to implement the DATA above)

  classes:

      "start" expression => strcmp("start","$(state)"),
        comment => "Check if to start a service";
      "stop"  expression => strcmp("stop","$(state)"),
        comment => "Check if to stop a service";


  processes:

    start::

      "$(pattern[$(service)])" ->  { "@(stakeholders[$(service)])" } ,

        comment => "Verify service appears in process table",
        restart_class => "restart_$(service)";

    stop::

      "$(pattern[$(service)])" -> { "@(stakeholders[$(service)])" },

        comment => "Verify service does not appear in process table",
        process_stop => "$(stopcommand[$(service)])",
        signals => { "term", "kill"};

  commands:

      "$(startcommand[$(service)])" -> { "@(stakeholders[$(service)])" },

        comment => "Execute command to restart service '$(service)'",
        ifvarclass => "restart_$(service)";
}
